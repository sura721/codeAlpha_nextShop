generator client {
  provider      = "prisma-client-js"
  output        = "../prisma/generated/prisma"
  binaryTargets = ["native", "rhel-openssl-3.0.x"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  clerkId   String   @unique
  email     String
  name      String?
  admin     Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  orders  Order[]
  reviews Review[]
}

model Product {
  id          String      @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  slug        String      @unique
  description String
  price       Float
  offerPrice  Float?
  images      String[]
  inStock     Int
  category    Category    @relation(fields: [categoryId], references: [id])
  categoryId  String      @db.ObjectId
  orderItems  OrderItem[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  reviews Review[]
}

model Category {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  slug     String    @unique
  products Product[]
}

model Order {
  id     String      @id @default(auto()) @map("_id") @db.ObjectId
  user   User        @relation(fields: [userId], references: [id])
  userId String      @db.ObjectId
  items  OrderItem[]
  status OrderStatus @default(PENDING)
  total  Float

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum OrderStatus {
  PENDING
  PROCESSING
  SHIPPED
  DELIVERED
  CANCELLED
}

model OrderItem {
  id      String  @id @default(auto()) @map("_id") @db.ObjectId
  order   Order   @relation(fields: [orderId], references: [id])
  orderId String  @db.ObjectId
  product Product @relation(fields: [productId], references: [id])

  productId String @db.ObjectId
  quantity  Int
  price     Float
}

model Review {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @db.ObjectId
  product   Product  @relation(fields: [productId], references: [id])
  productId String   @db.ObjectId
  rating    Int
  comment   String
  createdAt DateTime @default(now())
}
